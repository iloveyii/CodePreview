@page "/earnings"
@attribute [Authorize(Roles = "User")]
@using Accounting.Client.Components
@using Accounting.Client.Components.Earnings
@inject HttpClient Http
@using Accounting.Shared
@using Accounting.Client.Services
@inject IDataService dataService
@using Accounting.Client.Authentication
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<h3>Earnings</h3>
<div class="row">
    <div class="col-lg-8 mt-3">
        <EarningTable OnOpenDeleteDialog="@OpenDeleteDialog" earnings="@earnings"></EarningTable>
    </div>

    <div class="col-lg-4 mt-3">
        <EarningForm OnSubmitCallback="@Refresh"></EarningForm>
    </div>

    <div>&nbsp;</div>
    @if(DeleteDialogOpen) 
    {
        <ModalDialog Title="Are you sure?"
            Text="Do you want to delete this earning?"
            OnClose="@OnDeleteDialogClose"
            DialogType="ModalDialog.ModalDialogType.DeleteCancel">
        </ModalDialog>
    }
</div>



@code {
    private Earning[] earnings;
    private Earning earningToDelete;
    public bool DeleteDialogOpen { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task OpenDeleteDialog(Earning earning)
    {
        DeleteDialogOpen = true;
        earningToDelete = earning;
        StateHasChanged();
    }

    private async Task OnDeleteDialogClose(bool confirmed)
    {
        if(confirmed)
        {
            await dataService.DeleteEarning(earningToDelete.Id);
            await LoadData();
            earningToDelete = null;
        }
        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private async Task LoadData()
    {
        var hasAccess = await Helper.UserLoggedIn(authStateProvider);
        if (hasAccess)
        {
            earnings = await dataService.LoadEarnings();
            StateHasChanged();
        }
        else
        {
            navManager.NavigateTo("/login");
        }

    }

    public async void Refresh()
    {
        await LoadData();
    }

}
 