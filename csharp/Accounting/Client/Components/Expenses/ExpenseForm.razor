@using Accounting.Shared
@using Accounting.Client.Components
@using Accounting.Client.Components.Expense
@using Accounting.Client.Services
@using Accounting.Client.Authentication
@using Microsoft.AspNetCore.Components.Authorization;
@inject HttpClient Http
@inject IDataService dataService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager


<div id="expensesContainer" class="card">
    <div class="card-header">
        Add an expense
    </div>
    <div class="card-body">
        <EditForm Model="@expense" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group mt-2">
                <label for="dateInput">Date</label>
                <InputDate class="form-control" id="dateInput" @bind-Value="expense.Date" />
            </div>
            <div class="form-group mt-2">
                <label for="subjectInput">Subject</label>
                <InputText class="form-control" id="subjectInput" @bind-Value="expense.Subject" />
            </div>
            <div class="form-group mt-2">
                <label for="categoryInput">Category</label>
                <InputSelect class="form-control" id="categoryInput" @bind-Value="expense.Category">
                    @{
                        foreach (var value in Enum.GetValues(typeof(ExpenseCategory)))
                        {
                            <option value="@value">@value</option>
                        }
                    }
                </InputSelect>
            </div>

            <div class="form-group mt-2">
                <label for="amountInput">Amount</label>
                <InputNumber class="form-control" id="amountInput" @bind-Value="expense.Amount" />
            </div>
            <div class="mt-3">
                <button id="submitExpenses" type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private ExpenseModel expense = new ExpenseModel { Date = DateTime.Today };

    [Parameter]
    public EventCallback OnSubmitCallback { get; set; }

    public async Task HandleValidSubmit()
    {
        await dataService.AddExpense(expense);
        // await Http.PostAsJsonAsync<ExpenseModel>("api/Expenses", earning);
        await OnSubmitCallback.InvokeAsync();
        StateHasChanged();
    }
}
